{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\goit-react-hw-01-components\\\\src\\\\components\\\\FriendList\\\\FriendList.js\";\nimport PropTypes from 'prop-types';\nimport { FriendListItem } from '../FriendListItem/FriendListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    class: \"friend-list\",\n    children: friends.map(_ref2 => {\n      let {\n        id,\n        avatar,\n        name,\n        isOnline\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        avatar: avatar,\n        name: name,\n        isOnline: isOnline\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 1\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 1\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired\n  }))\n};\nexport const EventBoard = _ref3 => {\n  let {\n    events\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.eventBoard,\n    children: events.map(_ref4 => {\n      let {\n        name,\n        location,\n        speaker,\n        type,\n        time\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Event, {\n        name: name,\n        location: location,\n        speaker: speaker,\n        type: type,\n        start: time.start,\n        end: time.end\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_c2 = EventBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FriendList\");\n$RefreshReg$(_c2, \"EventBoard\");","map":{"version":3,"sources":["C:/project/goit-react-hw-01-components/src/components/FriendList/FriendList.js"],"names":["PropTypes","FriendListItem","FriendList","friends","map","id","avatar","name","isOnline","propTypes","arrayOf","shape","string","isRequired","bool","number","EventBoard","events","css","eventBoard","location","speaker","type","time","start","end"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,kCAA7B;;AAEA,OAAO,MAAMC,UAAU,GAAC,QAAe;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AACnC,sBACJ;AAAI,IAAA,KAAK,EAAC,aAAV;AAAA,cACCA,OAAO,CAACC,GAAR,CAAY;AAAA,UAAC;AAACC,QAAAA,EAAD;AAAKC,QAAAA,MAAL;AAAaC,QAAAA,IAAb;AAAmBC,QAAAA;AAAnB,OAAD;AAAA,0BACb,QAAC,cAAD;AACI,QAAA,MAAM,EAAEF,MADZ;AAEI,QAAA,IAAI,EAAEC,IAFV;AAGI,QAAA,QAAQ,EAAEC;AAHd,SAAqBH,EAArB;AAAA;AAAA;AAAA;AAAA,cADa;AAAA,KAAZ;AADD;AAAA;AAAA;AAAA;AAAA,UADI;AASF,CAVK;KAAMH,U;AAYbA,UAAU,CAACO,SAAX,GAAsB;AAClBN,EAAAA,OAAO,EAACH,SAAS,CAACU,OAAV,CACJV,SAAS,CAACW,KAAV,CAAgB;AACZL,IAAAA,MAAM,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADb;AAEZN,IAAAA,IAAI,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAFX;AAGZL,IAAAA,QAAQ,EAAER,SAAS,CAACc,IAAV,CAAeD,UAHb;AAIZR,IAAAA,EAAE,EAAEL,SAAS,CAACe,MAAV,CAAiBF;AAJT,GAAhB,CADI;AADU,CAAtB;AAUA,OAAO,MAAMG,UAAU,GAAG,SAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACtC,sBACE;AAAK,IAAA,SAAS,EAAEC,GAAG,CAACC,UAApB;AAAA,cACGF,MAAM,CAACb,GAAP,CAAW;AAAA,UAAC;AAAEG,QAAAA,IAAF;AAAQa,QAAAA,QAAR;AAAkBC,QAAAA,OAAlB;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC,OAAD;AAAA,0BACV,QAAC,KAAD;AAEE,QAAA,IAAI,EAAEhB,IAFR;AAGE,QAAA,QAAQ,EAAEa,QAHZ;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,IAAI,EAAEC,IALR;AAME,QAAA,KAAK,EAAEC,IAAI,CAACC,KANd;AAOE,QAAA,GAAG,EAAED,IAAI,CAACE;AAPZ,SACOlB,IADP;AAAA;AAAA;AAAA;AAAA,cADU;AAAA,KAAX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBI;MAAMS,U","sourcesContent":["import PropTypes from 'prop-types';\r\nimport {FriendListItem} from '../FriendListItem/FriendListItem';\r\n\r\nexport const FriendList=({friends}) => {\r\n    return (\r\n<ul class=\"friend-list\">\r\n{friends.map(({id, avatar, name, isOnline}) => (\r\n<FriendListItem key={id}\r\n    avatar={avatar}\r\n    name={name}\r\n    isOnline={isOnline}\r\n />))}\r\n</ul>\r\n)}\r\n\r\nFriendList.propTypes= {\r\n    friends:PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n            id: PropTypes.number.isRequired\r\n    })\r\n    )\r\n}\r\nexport const EventBoard = ({ events }) => {\r\n    return (\r\n      <div className={css.eventBoard}>\r\n        {events.map(({ name, location, speaker, type, time }) => (\r\n          <Event\r\n            key={name}\r\n            name={name}\r\n            location={location}\r\n            speaker={speaker}\r\n            type={type}\r\n            start={time.start}\r\n            end={time.end}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}