{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\goit-react-hw-01-components\\\\src\\\\components\\\\FriendList\\\\FriendList.js\";\nimport PropTypes from 'prop-types';\nimport { FriendListItem } from '../FriendListItem/FriendListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    class: \"friend-list\",\n    children: friends.map(_ref2 => {\n      let {\n        id,\n        avatar,\n        name,\n        isOnline\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        avatar: avatar,\n        name: name,\n        isOnline: isOnline\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 1\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 1\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired\n  }))\n};\nexport const Event = _ref3 => {\n  let {\n    name,\n    location,\n    speaker,\n    type,\n    start,\n    end\n  } = _ref3;\n  const formattedStart = formatEventStart(start);\n  const duration = formatEventDuration(start, end);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.event,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n        className: css.icon,\n        size: iconSize.sm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(FaUserAlt, {\n        className: css.icon,\n        size: iconSize.sm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), speaker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n        className: css.icon,\n        size: iconSize.sm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), formattedStart]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.info,\n      children: [/*#__PURE__*/_jsxDEV(FaClock, {\n        className: css.icon,\n        size: iconSize.sm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), duration]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${css.chip} ${css[type]}`,\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Event;\nEvent.propTypes = {\n  name: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  speaker: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FriendList\");\n$RefreshReg$(_c2, \"Event\");","map":{"version":3,"sources":["C:/project/goit-react-hw-01-components/src/components/FriendList/FriendList.js"],"names":["PropTypes","FriendListItem","FriendList","friends","map","id","avatar","name","isOnline","propTypes","arrayOf","shape","string","isRequired","bool","number","Event","location","speaker","type","start","end","formattedStart","formatEventStart","duration","formatEventDuration","css","event","title","info","icon","iconSize","sm","chip"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport {FriendListItem} from '../FriendListItem/FriendListItem';\r\n\r\nexport const FriendList=({friends}) => {\r\n    return (\r\n<ul class=\"friend-list\">\r\n{friends.map(({id, avatar, name, isOnline}) => (\r\n<FriendListItem \r\n    key={id}\r\n    avatar={avatar}\r\n    name={name}\r\n    isOnline={isOnline}\r\n />))}\r\n</ul>\r\n)}\r\n\r\nFriendList.propTypes= {\r\n    friends:PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n            id: PropTypes.number.isRequired\r\n    })\r\n    )\r\n}\r\nexport const Event = ({ name, location, speaker, type, start, end }) => {\r\n  const formattedStart = formatEventStart(start);\r\n  const duration = formatEventDuration(start, end);\r\n\r\n  return (\r\n    <div className={css.event}>\r\n      <h2 className={css.title}>{name}</h2>\r\n      <p className={css.info}>\r\n        <FaMapMarkerAlt className={css.icon} size={iconSize.sm} />\r\n        {location}\r\n      </p>\r\n      <p className={css.info}>\r\n        <FaUserAlt className={css.icon} size={iconSize.sm} />\r\n        {speaker}\r\n      </p>\r\n      <p className={css.info}>\r\n        <FaCalendarAlt className={css.icon} size={iconSize.sm} />\r\n        {formattedStart}\r\n      </p>\r\n      <p className={css.info}>\r\n        <FaClock className={css.icon} size={iconSize.sm} />\r\n        {duration}\r\n      </p>\r\n      <span className={`${css.chip} ${css[type]}`}>{type}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nEvent.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  speaker: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  start: PropTypes.string.isRequired,\r\n  end: PropTypes.string.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}